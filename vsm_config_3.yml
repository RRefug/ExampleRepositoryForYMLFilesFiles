name: vsm_config_3_test

trigger:
  - main

origin:
  - https://github.com/RRefug/ExampleRepositoryForYMLFilesFiles
  
pool:
  vmImage: "ubuntu-latest"

jobs:
- job: Build_and_Test
  displayName: Build and Test
  steps:
  # Download the pipeline artifact from testA
  # This establishes a link that testB is depending on testA
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: 'testA'
      definition: 00
      specificBuildWithTriggering: true
      buildVersionToDownload: 'latest'
      pipelineId: 00
      targetPath: '$(Pipeline.Workspace)'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: '**/*Tests.csproj'
    displayName: 'Test'

- job: Deploy_to_Staging
  displayName: Deploy to Staging
  dependsOn: Build_and_Test
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      echo "Deploying to staging environment..."
      ./deploy.sh
    displayName: 'Deploy'
    env:
      ENVIRONMENT: 'staging'

- job: Deploy_to_Production
  displayName: Deploy to Production
  dependsOn: Build_and_Test
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      echo "Deploying to production environment..."
      ./deploy.sh
    displayName: 'Deploy'
    env:
      ENVIRONMENT: 'production'

jobs:
- job: Build_and_Test
  displayName: Build and Test
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      echo "Building the project..."
      dotnet build MyProject.csproj
    displayName: 'Build'
  - task: PythonScript@0
    inputs:
      command: 'run'
      projects: 'main.py'
    displayName: 'Python script'

- job: Deploy_to_Staging
  displayName: Deploy to Staging
  dependsOn: Build_and_Test
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: JavaApp@1
    inputs:
      command: 'run'
      projects: 'main.py'
    displayName: 'Python script'

- job: Deploy_to_Production
  displayName: Deploy to Production
  dependsOn: Build_and_Test
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: PythonScript@0
    inputs:
      command: 'run'
      projects: 'main.py'
    displayName: 'Python script'
  - publish: "filepath"
    artifact: "testA_Artifact"
    displayName: "Publish Artifact"
